services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: bookstore_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [backend]

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - /app/.venv
    ports:
      - "8000:8000"
    env_file:
      - ./env.dev
    depends_on:
      db:
        condition: service_healthy
    networks: [backend]

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
